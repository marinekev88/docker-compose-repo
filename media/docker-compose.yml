version: "3.7"
services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - TZ=${TIMEZONE}
      - UMASK=022
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    devices:
      - /dev/dri:/dev/dri
    ports:
      - "32400:32400"
      - "32469:32469"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - ${DATADIR}/plex-config:/config
      - ${DATADIR}/plex:/media
      - ${TRANSCODE_DIR}:/transcode
    restart: unless-stopped
    networks:
      - media_net
  
  sabnzb:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzb
    ports:
      - "8080:8080"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - UMASK=002
    volumes:
      - ${DATADIR}/sabnzb/config:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/plex:/plex    
    restart: unless-stopped
    networks:
      - media_net
    
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - "7878:7878"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - UMASK=002
    volumes:
      - ${DATADIR}/radarr-config:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/plex/movies:/movies
    restart: unless-stopped
    networks:
      - media_net
    
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${DATADIR}/sonarr-config:/config
      - ${DATADIR}/downloads:/downloads
      - ${DATADIR}/plex/tv:/tv
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks:
      - media_net    
  
  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    volumes:
      - ${OMBI_CONFIG}:/config
    ports:
      - "3579:3579"
    restart: unless-stopped
    depends_on:
      - "mysql_db"
    networks:
      - media_net

  mysql_db:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - $(OMBI_CONFIG)/db:/var/lib/mysql
      - ${OMBI_CONFIG}/db_init/init.sql:/docker-entrypoint-initdb.d/1.sql
      
networks:
  mdnet:
    driver: bridge
