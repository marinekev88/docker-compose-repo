services:
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - TZ=${TIME_ZONE}
      - UMASK=022
      - PUID=1001
      - PGID=1001
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
    ports:
      - "32400:32400"
      - "32469:32469"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    volumes:
      - ${CONFIGURATION_DIR}/plex-config:/config
      - ${MEDIA_DIR}/plex:/media
      - ${TRANSCODE_DIR}:/transcode
    restart: unless-stopped
    networks:
      - media_net
  
  sabnzb:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzb
    ports:
      - "8080:8080"
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIME_ZONE}
      - UMASK=002
    volumes:
      - ${CONFIGURATION_DIR}/sabnzb-config:/config
      - ${MEDIA_DIR}/downloads:/downloads
      - ${MEDIA_DIR}/plex:/plex    
    restart: unless-stopped
    networks:
      - media_net
    
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - "7878:7878"
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIME_ZONE}
      - UMASK=002
    volumes:
      - ${CONFIGURATION_DIR}/radarr-config:/config
      - ${MEDIA_DIR}/downloads:/downloads
      - ${MEDIA_DIR}/plex/movies:/movies
    restart: unless-stopped
    networks:
      - media_net
    
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIGURATION_DIR}/sonarr-config:/config
      - ${MEDIA_DIR}/downloads:/downloads
      - ${MEDIA_DIR}/plex/tv:/tv
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks:
      - media_net    
  
  ombi:
    image: lscr.io/linuxserver/ombi:latest
    container_name: ombi
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIME_ZONE}
    volumes:
      - ${CONFIGURATION_DIR}/ombi-config:/config
    ports:
      - "3579:3579"
    restart: unless-stopped
    depends_on:
      - "mysql_db"
    networks:
      - media_net

  mysql_db:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - sql-media:/var/lib/mysql
      - ${CONFIGURATION_DIR}/sql-config/init.sql:/docker-entrypoint-initdb.d/1.sql
    networks:
      - media_net
      
volumes:
  sql-media:

networks:
  media_net:
    driver: bridge
